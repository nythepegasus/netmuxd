name: Cross Platform Build

on:
  workflow_dispatch:
  push:
    
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          targets: aarch64-unknown-linux-gnu, armv7-unknown-linux-gnueabihf, x86_64-unknown-linux-gnu
      - name: Install cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf
      - name: Build all targets
        run: |
          cargo build --release --target x86_64-unknown-linux-gnu
          cargo build --release --target aarch64-unknown-linux-gnu
          cargo build --release --target armv7-unknown-linux-gnueabihf
      - uses: actions/upload-artifact@v3
        with:
          name: linux-binaries
          path: target/*/release/

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          targets: x86_64-apple-darwin, aarch64-apple-darwin
      - name: Build all targets
        run: |
          cargo build --release --target x86_64-apple-darwin
          cargo build --release --target aarch64-apple-darwin
      - uses: actions/upload-artifact@v3
        with:
          name: macos-binaries
          path: target/*/release/

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          targets: x86_64-pc-windows-msvc, i686-pc-windows-msvc
      - name: Build all targets
        run: |
          cargo build --release --target x86_64-pc-windows-msvc
          cargo build --release --target i686-pc-windows-msvc
      - uses: actions/upload-artifact@v3
        with:
          name: windows-binaries
          path: target/*/release/

  docker:
    needs: build-linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          name: linux-binaries
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          tags: ${{ secrets.TAGS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: nightly
          name: Development Build
          prerelease: true
          files: artifacts/**/*
          body: Automated development build
          token: ${{ secrets.GITHUB_TOKEN }}
